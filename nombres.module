<?php

use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
use Drupal\Component\Plugin\Exception\PluginNotFoundException;

/**
 * Implements hook_theme().
 */
function nombres_theme($existing, $type, $theme, $path) {

  return [
    'listar_nombres' => [
      'variables' => [
        'data' => NULL,
        'form' => NULL,
      ],
      'template' => 'listar-nombres',
    ],
    'ver_nombres' => [
      'variables' => [
        'data' => NULL,
        'form' => NULL,
        'table' => NULL,
      ],
      'template' => 'ver-nombres',
    ],
    'animes' => [
      'variables' => [
        'data' => NULL,
        'form' => NULL,
        'table' => NULL,
      ],
      'template' => 'animes',
    ],
    'animes_admin' => [
      'variables' => [
        'data' => NULL,
        'form' => NULL,
        'table' => NULL,
      ],
      'template' => 'animes-admin',
    ],
    'animes_admin_ver' => [
      'variables' => [
        'data' => NULL,
        'form' => NULL,
        // 'table' => NULL,
      ],
      'template' => 'animes-admin-ver',
    ],
    'animes_ver' => [
      'variables' => [
        'data' => NULL,
        // 'form' => NULL,
        // 'table' => NULL,
      ],
      'template' => 'animes-ver',
    ],
    'dashboard' => [
      'variables' => [
        'servicios' => NULL,
        'clientes' => NULL,
        'paginador' => NULL,

      ],
      'template' => 'dashboard',
    ],
    'servicios' => [
      'variables' => [
        'servicios' => NULL,
        'clientes' => NULL,
        'table' => NULL,
        'view' => NULL,

      ],
      'template' => 'servicios',
    ],
    'clientes' => [
      'variables' => [
        'servicios' => NULL,
        'clientes' => NULL,
        'table' => NULL,
        'view' => NULL,

      ],
      'template' => 'clientes',
    ],
  ];
}


function nombres_node_delete(Drupal\Core\Entity\EntityInterface $entity) {

  switch ($entity->getType()) {
    case 'article':
      $nodeStorage = \Drupal::entityTypeManager()->getStorage('node');


      $ids = $nodeStorage->getQuery()
        ->condition('type', 'proyectos')
        ->condition('field_article_id', $entity->id())
        ->accessCheck(FALSE)
        ->execute();



      $entities = $nodeStorage->loadMultiple($ids);
      $nodeStorage->delete($entities);

      \Drupal::messenger()->addMessage('Todas las entidades relacionadas han sido eliminadas');

      break;

    case 'cliente':
      $nodeStorage = \Drupal::entityTypeManager()->getStorage('node');


      $ids = $nodeStorage->getQuery()
        ->condition('type', 'servicios')
        ->condition('field_cliente', $entity->id())
        ->accessCheck(FALSE)
        ->execute();



      $entities = $nodeStorage->loadMultiple($ids);
      $nodeStorage->delete($entities);

      \Drupal::messenger()->addMessage('Todas las entidades relacionadas han sido eliminadas');
      break;
  }

}



function nombres_preprocess_node(&$variables) {

  $node = $variables['node'];
  $content = $variables['content'];

  switch ($node->getType()){
    case 'servicios':

      //calcular el total de mi campo multiple
      $acumulado = 0;
      foreach($node->field_abonos as $abono){
        $acumulado = $acumulado + $abono->value;
      }

      // % de mis abonos y el acumulado
      $porcentaje = ($acumulado / $node->field_va->value ) * 100 ;

      // deuda restante
      $restante = $node->field_va->value - $acumulado;

      $variables['content']['field_acumulado'] = $acumulado;
      $variables['content']['field_restante'] = intval($restante);
      $variables['content']['field_porcentaje'] = intval($porcentaje);


      break;
  }
}

